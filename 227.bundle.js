"use strict";(self.webpackChunk_tuprolog_arg2p_playground=self.webpackChunk_tuprolog_arg2p_playground||[]).push([[227],{3858:(o,r,e)=>{e.d(r,{$B:()=>R,By:()=>g,Cg:()=>l,DS:()=>M,EC:()=>y,EY:()=>T,Fi:()=>h,GN:()=>J,Gj:()=>U,Hn:()=>f,II:()=>x,JP:()=>eo,Qw:()=>C,Rb:()=>k,S5:()=>H,St:()=>b,Ub:()=>D,Yt:()=>c,ZE:()=>S,bN:()=>to,et:()=>P,f3:()=>w,f9:()=>W,fA:()=>oo,i6:()=>B,ld:()=>q,mc:()=>V,oZ:()=>O,p8:()=>L,pO:()=>p,rm:()=>m,sA:()=>_,sI:()=>u,t:()=>v,tY:()=>ro,vV:()=>G,wh:()=>s});var t=e(3765),n=e(4901),i=e(7676),d=e(8382),a=e(8687);const c=(0,i.x1)("editor.background",{light:"#ffffff",dark:"#1E1E1E",hcDark:n.Q1.black,hcLight:n.Q1.white},t.kg("editorBackground","Editor background color.")),g=(0,i.x1)("editor.foreground",{light:"#333333",dark:"#BBBBBB",hcDark:n.Q1.white,hcLight:d.CU},t.kg("editorForeground","Editor default foreground color.")),l=((0,i.x1)("editorStickyScroll.background",c,t.kg("editorStickyScrollBackground","Background color of sticky scroll in the editor")),(0,i.x1)("editorStickyScrollHover.background",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},t.kg("editorStickyScrollHoverBackground","Background color of sticky scroll on hover in the editor")),(0,i.x1)("editorStickyScroll.border",{dark:null,light:null,hcDark:d.b1,hcLight:d.b1},t.kg("editorStickyScrollBorder","Border color of sticky scroll in the editor")),(0,i.x1)("editorStickyScroll.shadow",a.bX,t.kg("editorStickyScrollShadow"," Shadow color of sticky scroll in the editor")),(0,i.x1)("editorWidget.background",{dark:"#252526",light:"#F3F3F3",hcDark:"#0C141F",hcLight:n.Q1.white},t.kg("editorWidgetBackground","Background color of editor widgets, such as find/replace."))),h=(0,i.x1)("editorWidget.foreground",d.CU,t.kg("editorWidgetForeground","Foreground color of editor widgets, such as find/replace.")),u=(0,i.x1)("editorWidget.border",{dark:"#454545",light:"#C8C8C8",hcDark:d.b1,hcLight:d.b1},t.kg("editorWidgetBorder","Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.")),k=((0,i.x1)("editorWidget.resizeBorder",null,t.kg("editorWidgetResizeBorder","Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.")),(0,i.x1)("editorError.background",null,t.kg("editorError.background","Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("editorError.foreground",{dark:"#F14C4C",light:"#E51400",hcDark:"#F48771",hcLight:"#B5200D"},t.kg("editorError.foreground","Foreground color of error squigglies in the editor."))),s=((0,i.x1)("editorError.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#E47777").transparent(.8),hcLight:"#B5200D"},t.kg("errorBorder","If set, color of double underlines for errors in the editor.")),(0,i.x1)("editorWarning.background",null,t.kg("editorWarning.background","Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0)),f=(0,i.x1)("editorWarning.foreground",{dark:"#CCA700",light:"#BF8803",hcDark:"#FFD370",hcLight:"#895503"},t.kg("editorWarning.foreground","Foreground color of warning squigglies in the editor.")),b=(0,i.x1)("editorWarning.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#FFCC00").transparent(.8),hcLight:n.Q1.fromHex("#FFCC00").transparent(.8)},t.kg("warningBorder","If set, color of double underlines for warnings in the editor.")),p=((0,i.x1)("editorInfo.background",null,t.kg("editorInfo.background","Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("editorInfo.foreground",{dark:"#3794FF",light:"#1a85ff",hcDark:"#3794FF",hcLight:"#1a85ff"},t.kg("editorInfo.foreground","Foreground color of info squigglies in the editor."))),x=(0,i.x1)("editorInfo.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#3794FF").transparent(.8),hcLight:"#292929"},t.kg("infoBorder","If set, color of double underlines for infos in the editor.")),B=(0,i.x1)("editorHint.foreground",{dark:n.Q1.fromHex("#eeeeee").transparent(.7),light:"#6c6c6c",hcDark:null,hcLight:null},t.kg("editorHint.foreground","Foreground color of hint squigglies in the editor.")),F=((0,i.x1)("editorHint.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#eeeeee").transparent(.8),hcLight:"#292929"},t.kg("hintBorder","If set, color of double underlines for hints in the editor.")),(0,i.x1)("editorLink.activeForeground",{dark:"#4E94CE",light:n.Q1.blue,hcDark:n.Q1.cyan,hcLight:"#292929"},t.kg("activeLinkForeground","Color of active links.")),(0,i.x1)("editor.selectionBackground",{light:"#ADD6FF",dark:"#264F78",hcDark:"#f3f518",hcLight:"#0F4A85"},t.kg("editorSelectionBackground","Color of the editor selection."))),m=(0,i.x1)("editor.selectionForeground",{light:null,dark:null,hcDark:"#000000",hcLight:n.Q1.white},t.kg("editorSelectionForeground","Color of the selected text for high contrast.")),v=(0,i.x1)("editor.inactiveSelectionBackground",{light:(0,i.JO)(F,.5),dark:(0,i.JO)(F,.5),hcDark:(0,i.JO)(F,.7),hcLight:(0,i.JO)(F,.5)},t.kg("editorInactiveSelection","Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations."),!0),C=(0,i.x1)("editor.selectionHighlightBackground",{light:(0,i.oG)(F,c,.3,.6),dark:(0,i.oG)(F,c,.3,.6),hcDark:null,hcLight:null},t.kg("editorSelectionHighlight","Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations."),!0),w=((0,i.x1)("editor.selectionHighlightBorder",{light:null,dark:null,hcDark:d.bu,hcLight:d.bu},t.kg("editorSelectionHighlightBorder","Border color for regions with the same content as the selection.")),(0,i.x1)("editor.findMatchBackground",{light:"#A8AC94",dark:"#515C6A",hcDark:null,hcLight:null},t.kg("editorFindMatch","Color of the current search match.")),(0,i.x1)("editor.findMatchForeground",null,t.kg("editorFindMatchForeground","Text color of the current search match."))),D=(0,i.x1)("editor.findMatchHighlightBackground",{light:"#EA5C0055",dark:"#EA5C0055",hcDark:null,hcLight:null},t.kg("findMatchHighlight","Color of the other search matches. The color must not be opaque so as not to hide underlying decorations."),!0),L=(0,i.x1)("editor.findMatchHighlightForeground",null,t.kg("findMatchHighlightForeground","Foreground color of the other search matches."),!0),y=((0,i.x1)("editor.findRangeHighlightBackground",{dark:"#3a3d4166",light:"#b4b4b44d",hcDark:null,hcLight:null},t.kg("findRangeHighlight","Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("editor.findMatchBorder",{light:null,dark:null,hcDark:d.bu,hcLight:d.bu},t.kg("editorFindMatchBorder","Border color of the current search match.")),(0,i.x1)("editor.findMatchHighlightBorder",{light:null,dark:null,hcDark:d.bu,hcLight:d.bu},t.kg("findMatchHighlightBorder","Border color of the other search matches."))),H=(0,i.x1)("editor.findRangeHighlightBorder",{dark:null,light:null,hcDark:(0,i.JO)(d.bu,.4),hcLight:(0,i.JO)(d.bu,.4)},t.kg("findRangeHighlightBorder","Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),Q=((0,i.x1)("editor.hoverHighlightBackground",{light:"#ADD6FF26",dark:"#264f7840",hcDark:"#ADD6FF26",hcLight:null},t.kg("hoverHighlight","Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("editorHoverWidget.background",l,t.kg("hoverBackground","Background color of the editor hover."))),O=((0,i.x1)("editorHoverWidget.foreground",h,t.kg("hoverForeground","Foreground color of the editor hover.")),(0,i.x1)("editorHoverWidget.border",u,t.kg("hoverBorder","Border color of the editor hover."))),I=((0,i.x1)("editorHoverWidget.statusBarBackground",{dark:(0,i.a)(Q,.2),light:(0,i.e$)(Q,.05),hcDark:l,hcLight:l},t.kg("statusBarBackground","Background color of the editor hover status bar.")),(0,i.x1)("editorInlayHint.foreground",{dark:"#969696",light:"#969696",hcDark:n.Q1.white,hcLight:n.Q1.black},t.kg("editorInlayHintForeground","Foreground color of inline hints"))),A=(0,i.x1)("editorInlayHint.background",{dark:(0,i.JO)(a.WM,.1),light:(0,i.JO)(a.WM,.1),hcDark:(0,i.JO)(n.Q1.white,.1),hcLight:(0,i.JO)(a.WM,.1)},t.kg("editorInlayHintBackground","Background color of inline hints")),E=((0,i.x1)("editorInlayHint.typeForeground",I,t.kg("editorInlayHintForegroundTypes","Foreground color of inline hints for types")),(0,i.x1)("editorInlayHint.typeBackground",A,t.kg("editorInlayHintBackgroundTypes","Background color of inline hints for types")),(0,i.x1)("editorInlayHint.parameterForeground",I,t.kg("editorInlayHintForegroundParameter","Foreground color of inline hints for parameters")),(0,i.x1)("editorInlayHint.parameterBackground",A,t.kg("editorInlayHintBackgroundParameter","Background color of inline hints for parameters")),(0,i.x1)("editorLightBulb.foreground",{dark:"#FFCC00",light:"#DDB100",hcDark:"#FFCC00",hcLight:"#007ACC"},t.kg("editorLightBulbForeground","The color used for the lightbulb actions icon."))),T=((0,i.x1)("editorLightBulbAutoFix.foreground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},t.kg("editorLightBulbAutoFixForeground","The color used for the lightbulb auto fix actions icon.")),(0,i.x1)("editorLightBulbAi.foreground",E,t.kg("editorLightBulbAiForeground","The color used for the lightbulb AI icon.")),(0,i.x1)("editor.snippetTabstopHighlightBackground",{dark:new n.Q1(new n.bU(124,124,124,.3)),light:new n.Q1(new n.bU(10,50,100,.2)),hcDark:new n.Q1(new n.bU(124,124,124,.3)),hcLight:new n.Q1(new n.bU(10,50,100,.2))},t.kg("snippetTabstopHighlightBackground","Highlight background color of a snippet tabstop.")),(0,i.x1)("editor.snippetTabstopHighlightBorder",null,t.kg("snippetTabstopHighlightBorder","Highlight border color of a snippet tabstop.")),(0,i.x1)("editor.snippetFinalTabstopHighlightBackground",null,t.kg("snippetFinalTabstopHighlightBackground","Highlight background color of the final tabstop of a snippet.")),(0,i.x1)("editor.snippetFinalTabstopHighlightBorder",{dark:"#525252",light:new n.Q1(new n.bU(10,50,100,.5)),hcDark:"#525252",hcLight:"#292929"},t.kg("snippetFinalTabstopHighlightBorder","Highlight border color of the final tabstop of a snippet.")),new n.Q1(new n.bU(155,185,85,.2))),S=new n.Q1(new n.bU(255,0,0,.2)),U=(0,i.x1)("diffEditor.insertedTextBackground",{dark:"#9ccc2c33",light:"#9ccc2c40",hcDark:null,hcLight:null},t.kg("diffEditorInserted","Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),J=(0,i.x1)("diffEditor.removedTextBackground",{dark:"#ff000033",light:"#ff000033",hcDark:null,hcLight:null},t.kg("diffEditorRemoved","Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),q=((0,i.x1)("diffEditor.insertedLineBackground",{dark:T,light:T,hcDark:null,hcLight:null},t.kg("diffEditorInsertedLines","Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("diffEditor.removedLineBackground",{dark:S,light:S,hcDark:null,hcLight:null},t.kg("diffEditorRemovedLines","Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("diffEditorGutter.insertedLineBackground",null,t.kg("diffEditorInsertedLineGutter","Background color for the margin where lines got inserted.")),(0,i.x1)("diffEditorGutter.removedLineBackground",null,t.kg("diffEditorRemovedLineGutter","Background color for the margin where lines got removed.")),(0,i.x1)("diffEditorOverview.insertedForeground",null,t.kg("diffEditorOverviewInserted","Diff overview ruler foreground for inserted content."))),R=(0,i.x1)("diffEditorOverview.removedForeground",null,t.kg("diffEditorOverviewRemoved","Diff overview ruler foreground for removed content.")),W=((0,i.x1)("diffEditor.insertedTextBorder",{dark:null,light:null,hcDark:"#33ff2eff",hcLight:"#374E06"},t.kg("diffEditorInsertedOutline","Outline color for the text that got inserted.")),(0,i.x1)("diffEditor.removedTextBorder",{dark:null,light:null,hcDark:"#FF008F",hcLight:"#AD0707"},t.kg("diffEditorRemovedOutline","Outline color for text that got removed.")),(0,i.x1)("diffEditor.border",{dark:null,light:null,hcDark:d.b1,hcLight:d.b1},t.kg("diffEditorBorder","Border color between the two text editors.")),(0,i.x1)("diffEditor.diagonalFill",{dark:"#cccccc33",light:"#22222233",hcDark:null,hcLight:null},t.kg("diffDiagonalFill","Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.")),(0,i.x1)("diffEditor.unchangedRegionBackground","sideBar.background",t.kg("diffEditor.unchangedRegionBackground","The background color of unchanged blocks in the diff editor.")),(0,i.x1)("diffEditor.unchangedRegionForeground","foreground",t.kg("diffEditor.unchangedRegionForeground","The foreground color of unchanged blocks in the diff editor.")),(0,i.x1)("diffEditor.unchangedCodeBackground",{dark:"#74747429",light:"#b8b8b829",hcDark:null,hcLight:null},t.kg("diffEditor.unchangedCodeBackground","The background color of unchanged code in the diff editor.")),(0,i.x1)("widget.shadow",{dark:(0,i.JO)(n.Q1.black,.36),light:(0,i.JO)(n.Q1.black,.16),hcDark:null,hcLight:null},t.kg("widgetShadow","Shadow color of widgets such as find/replace inside the editor."))),M=(0,i.x1)("widget.border",{dark:null,light:null,hcDark:d.b1,hcLight:d.b1},t.kg("widgetBorder","Border color of widgets such as find/replace inside the editor.")),$=(0,i.x1)("toolbar.hoverBackground",{dark:"#5a5d5e50",light:"#b8b8b850",hcDark:null,hcLight:null},t.kg("toolbarHoverBackground","Toolbar background when hovering over actions using the mouse")),V=((0,i.x1)("toolbar.hoverOutline",{dark:null,light:null,hcDark:d.bu,hcLight:d.bu},t.kg("toolbarHoverOutline","Toolbar outline when hovering over actions using the mouse")),(0,i.x1)("toolbar.activeBackground",{dark:(0,i.a)($,.1),light:(0,i.e$)($,.1),hcDark:null,hcLight:null},t.kg("toolbarActiveBackground","Toolbar background when holding the mouse over actions")),(0,i.x1)("breadcrumb.foreground",(0,i.JO)(d.CU,.8),t.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items."))),G=(0,i.x1)("breadcrumb.background",c,t.kg("breadcrumbsBackground","Background color of breadcrumb items.")),P=(0,i.x1)("breadcrumb.focusForeground",{light:(0,i.e$)(d.CU,.2),dark:(0,i.a)(d.CU,.1),hcDark:(0,i.a)(d.CU,.1),hcLight:(0,i.a)(d.CU,.1)},t.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),_=(0,i.x1)("breadcrumb.activeSelectionForeground",{light:(0,i.e$)(d.CU,.2),dark:(0,i.a)(d.CU,.1),hcDark:(0,i.a)(d.CU,.1),hcLight:(0,i.a)(d.CU,.1)},t.kg("breadcrumbsSelectedForeground","Color of selected breadcrumb items.")),j=((0,i.x1)("breadcrumbPicker.background",l,t.kg("breadcrumbsSelectedBackground","Background color of breadcrumb item picker.")),n.Q1.fromHex("#40C8AE").transparent(.5)),z=n.Q1.fromHex("#40A6FF").transparent(.5),N=n.Q1.fromHex("#606060").transparent(.4),Y=(0,i.x1)("merge.currentHeaderBackground",{dark:j,light:j,hcDark:null,hcLight:null},t.kg("mergeCurrentHeaderBackground","Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),Z=((0,i.x1)("merge.currentContentBackground",(0,i.JO)(Y,.4),t.kg("mergeCurrentContentBackground","Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("merge.incomingHeaderBackground",{dark:z,light:z,hcDark:null,hcLight:null},t.kg("mergeIncomingHeaderBackground","Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),K=((0,i.x1)("merge.incomingContentBackground",(0,i.JO)(Z,.4),t.kg("mergeIncomingContentBackground","Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("merge.commonHeaderBackground",{dark:N,light:N,hcDark:null,hcLight:null},t.kg("mergeCommonHeaderBackground","Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),X=((0,i.x1)("merge.commonContentBackground",(0,i.JO)(K,.4),t.kg("mergeCommonContentBackground","Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("merge.border",{dark:null,light:null,hcDark:"#C3DF6F",hcLight:"#007ACC"},t.kg("mergeBorder","Border color on headers and the splitter in inline merge-conflicts."))),oo=((0,i.x1)("editorOverviewRuler.currentContentForeground",{dark:(0,i.JO)(Y,1),light:(0,i.JO)(Y,1),hcDark:X,hcLight:X},t.kg("overviewRulerCurrentContentForeground","Current overview ruler foreground for inline merge-conflicts.")),(0,i.x1)("editorOverviewRuler.incomingContentForeground",{dark:(0,i.JO)(Z,1),light:(0,i.JO)(Z,1),hcDark:X,hcLight:X},t.kg("overviewRulerIncomingContentForeground","Incoming overview ruler foreground for inline merge-conflicts.")),(0,i.x1)("editorOverviewRuler.commonContentForeground",{dark:(0,i.JO)(K,1),light:(0,i.JO)(K,1),hcDark:X,hcLight:X},t.kg("overviewRulerCommonContentForeground","Common ancestor overview ruler foreground for inline merge-conflicts.")),(0,i.x1)("editorOverviewRuler.findMatchForeground",{dark:"#d186167e",light:"#d186167e",hcDark:"#AB5A00",hcLight:"#AB5A00"},t.kg("overviewRulerFindMatchForeground","Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations."),!0)),ro=((0,i.x1)("editorOverviewRuler.selectionHighlightForeground","#A0A0A0CC",t.kg("overviewRulerSelectionHighlightForeground","Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("problemsErrorIcon.foreground",k,t.kg("problemsErrorIconForeground","The color used for the problems error icon."))),eo=(0,i.x1)("problemsWarningIcon.foreground",f,t.kg("problemsWarningIconForeground","The color used for the problems warning icon.")),to=(0,i.x1)("problemsInfoIcon.foreground",p,t.kg("problemsInfoIconForeground","The color used for the problems info icon."))},7676:(o,r,e)=>{e.d(r,{Bb:()=>l,Fd:()=>k,Gu:()=>h,HP:()=>u,Hz:()=>F,JO:()=>x,a:()=>p,e$:()=>b,oG:()=>m,x1:()=>f,yL:()=>B});var t=e(7110),n=e(5958),i=e(4901),d=e(2106),a=e(1460),c=e(7167),g=e(3765);function l(o){return`--vscode-${o.replace(/\./g,"-")}`}function h(o){return`var(${l(o)})`}function u(o,r){return`var(${l(o)}, ${r})`}const k={ColorContribution:"base.contributions.colors"},s=new class{constructor(){this._onDidChangeSchema=new d.vl,this.onDidChangeSchema=this._onDidChangeSchema.event,this.colorSchema={type:"object",properties:{}},this.colorReferenceSchema={type:"string",enum:[],enumDescriptions:[]},this.colorsById={}}registerColor(o,r,e,t=!1,n){const i={id:o,description:e,defaults:r,needsTransparency:t,deprecationMessage:n};this.colorsById[o]=i;const d={type:"string",format:"color-hex",defaultSnippets:[{body:"${1:#ff0000}"}]};return n&&(d.deprecationMessage=n),t&&(d.pattern="^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$",d.patternErrorMessage=g.kg("transparecyRequired","This color must be transparent or it will obscure content")),this.colorSchema.properties[o]={description:e,oneOf:[d,{type:"string",const:"default",description:g.kg("useDefault","Use the default color.")}]},this.colorReferenceSchema.enum.push(o),this.colorReferenceSchema.enumDescriptions.push(e),this._onDidChangeSchema.fire(),o}getColors(){return Object.keys(this.colorsById).map(o=>this.colorsById[o])}resolveDefaultColor(o,r){const e=this.colorsById[o];if(e?.defaults)return v(null!==(t=e.defaults)&&"object"==typeof t&&"light"in t&&"dark"in t?e.defaults[r.type]:e.defaults,r);var t}getColorSchema(){return this.colorSchema}toString(){return Object.keys(this.colorsById).sort((o,r)=>{const e=-1===o.indexOf(".")?0:1,t=-1===r.indexOf(".")?0:1;return e!==t?e-t:o.localeCompare(r)}).map(o=>`- \`${o}\`: ${this.colorsById[o].description}`).join("\n")}};function f(o,r,e,t,n){return s.registerColor(o,r,e,t,n)}function b(o,r){return{op:0,value:o,factor:r}}function p(o,r){return{op:1,value:o,factor:r}}function x(o,r){return{op:2,value:o,factor:r}}function B(...o){return{op:4,values:o}}function F(o,r,e){return{op:6,if:o,then:r,else:e}}function m(o,r,e,t){return{op:5,value:o,background:r,factor:e,transparency:t}}function v(o,r){if(null!==o)return"string"==typeof o?"#"===o[0]?i.Q1.fromHex(o):r.getColor(o):o instanceof i.Q1?o:"object"==typeof o?function(o,r){switch(o.op){case 0:return v(o.value,r)?.darken(o.factor);case 1:return v(o.value,r)?.lighten(o.factor);case 2:return v(o.value,r)?.transparent(o.factor);case 3:{const e=v(o.background,r);return e?v(o.value,r)?.makeOpaque(e):v(o.value,r)}case 4:for(const e of o.values){const o=v(e,r);if(o)return o}return;case 6:return v(r.defines(o.if)?o.then:o.else,r);case 5:{const e=v(o.value,r);if(!e)return;const t=v(o.background,r);return t?e.isDarkerThan(t)?i.Q1.getLighterColor(e,t,o.factor).transparent(o.transparency):i.Q1.getDarkerColor(e,t,o.factor).transparent(o.transparency):e.transparent(o.factor*o.transparency)}default:throw(0,t.xb)(o)}}(o,r):void 0}c.O.add(k.ColorContribution,s);const C="vscode://schemas/workbench-colors",w=c.O.as(a.F.JSONContribution);w.registerSchema(C,s.getColorSchema());const D=new n.uC(()=>w.notifySchemaChanged(C),200);s.onDidChangeSchema(()=>{D.isScheduled()||D.schedule()})},8382:(o,r,e)=>{e.d(r,{CU:()=>d,b1:()=>g,bu:()=>l,t4:()=>a,tA:()=>c,vw:()=>h});var t=e(3765),n=e(4901),i=e(7676);const d=(0,i.x1)("foreground",{dark:"#CCCCCC",light:"#616161",hcDark:"#FFFFFF",hcLight:"#292929"},t.kg("foreground","Overall foreground color. This color is only used if not overridden by a component.")),a=((0,i.x1)("disabledForeground",{dark:"#CCCCCC80",light:"#61616180",hcDark:"#A5A5A5",hcLight:"#7F7F7F"},t.kg("disabledForeground","Overall foreground for disabled elements. This color is only used if not overridden by a component.")),(0,i.x1)("errorForeground",{dark:"#F48771",light:"#A1260D",hcDark:"#F48771",hcLight:"#B5200D"},t.kg("errorForeground","Overall foreground color for error messages. This color is only used if not overridden by a component.")),(0,i.x1)("descriptionForeground",{light:"#717171",dark:(0,i.JO)(d,.7),hcDark:(0,i.JO)(d,.7),hcLight:(0,i.JO)(d,.7)},t.kg("descriptionForeground","Foreground color for description text providing additional information, for example for a label.")),(0,i.x1)("icon.foreground",{dark:"#C5C5C5",light:"#424242",hcDark:"#FFFFFF",hcLight:"#292929"},t.kg("iconForeground","The default color for icons in the workbench."))),c=(0,i.x1)("focusBorder",{dark:"#007FD4",light:"#0090F1",hcDark:"#F38518",hcLight:"#006BBD"},t.kg("focusBorder","Overall border color for focused elements. This color is only used if not overridden by a component.")),g=(0,i.x1)("contrastBorder",{light:null,dark:null,hcDark:"#6FC3DF",hcLight:"#0F4A85"},t.kg("contrastBorder","An extra border around elements to separate them from others for greater contrast.")),l=(0,i.x1)("contrastActiveBorder",{light:null,dark:null,hcDark:c,hcLight:c},t.kg("activeContrastBorder","An extra border around active elements to separate them from others for greater contrast.")),h=((0,i.x1)("selection.background",null,t.kg("selectionBackground","The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.")),(0,i.x1)("textLink.foreground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},t.kg("textLinkForeground","Foreground color for links in text.")));(0,i.x1)("textLink.activeForeground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},t.kg("textLinkActiveForeground","Foreground color for links in text when clicked on and on mouse hover.")),(0,i.x1)("textSeparator.foreground",{light:"#0000002e",dark:"#ffffff2e",hcDark:n.Q1.black,hcLight:"#292929"},t.kg("textSeparatorForeground","Color for text separators.")),(0,i.x1)("textPreformat.foreground",{light:"#A31515",dark:"#D7BA7D",hcDark:"#000000",hcLight:"#FFFFFF"},t.kg("textPreformatForeground","Foreground color for preformatted text segments.")),(0,i.x1)("textPreformat.background",{light:"#0000001A",dark:"#FFFFFF1A",hcDark:"#FFFFFF",hcLight:"#09345f"},t.kg("textPreformatBackground","Background color for preformatted text segments.")),(0,i.x1)("textBlockQuote.background",{light:"#f2f2f2",dark:"#222222",hcDark:null,hcLight:"#F2F2F2"},t.kg("textBlockQuoteBackground","Background color for block quotes in text.")),(0,i.x1)("textBlockQuote.border",{light:"#007acc80",dark:"#007acc80",hcDark:n.Q1.white,hcLight:"#292929"},t.kg("textBlockQuoteBorder","Border color for block quotes in text.")),(0,i.x1)("textCodeBlock.background",{light:"#dcdcdc66",dark:"#0a0a0a66",hcDark:n.Q1.black,hcLight:"#F2F2F2"},t.kg("textCodeBlockBackground","Background color for code blocks in text."))},9227:(o,r,e)=>{e.d(r,{$$:()=>s,C1:()=>F,C5:()=>P,G_:()=>H,HD:()=>_,Hc:()=>y,I$:()=>f,In:()=>E,Ip:()=>q,L4:()=>c,L9:()=>b,Oc:()=>V,Q1:()=>Q,Qf:()=>N,T5:()=>B,T9:()=>I,UL:()=>x,Uk:()=>J,XJ:()=>O,YS:()=>p,ZB:()=>M,Zg:()=>l,_$:()=>m,c1:()=>k,cw:()=>g,eU:()=>j,eY:()=>C,h9:()=>v,jO:()=>U,jr:()=>$,kP:()=>R,lW:()=>D,nZ:()=>S,r:()=>A,rv:()=>w,t0:()=>G,uN:()=>h,xO:()=>T,xW:()=>W,yq:()=>L,zU:()=>z});var t=e(3765),n=e(4901),i=e(7676),d=e(8382),a=e(3858);const c=(0,i.x1)("input.background",{dark:"#3C3C3C",light:n.Q1.white,hcDark:n.Q1.black,hcLight:n.Q1.white},t.kg("inputBoxBackground","Input box background.")),g=(0,i.x1)("input.foreground",d.CU,t.kg("inputBoxForeground","Input box foreground.")),l=(0,i.x1)("input.border",{dark:null,light:null,hcDark:d.b1,hcLight:d.b1},t.kg("inputBoxBorder","Input box border.")),h=(0,i.x1)("inputOption.activeBorder",{dark:"#007ACC",light:"#007ACC",hcDark:d.b1,hcLight:d.b1},t.kg("inputBoxActiveOptionBorder","Border color of activated options in input fields.")),u=(0,i.x1)("inputOption.hoverBackground",{dark:"#5a5d5e80",light:"#b8b8b850",hcDark:null,hcLight:null},t.kg("inputOption.hoverBackground","Background color of activated options in input fields.")),k=(0,i.x1)("inputOption.activeBackground",{dark:(0,i.JO)(d.tA,.4),light:(0,i.JO)(d.tA,.2),hcDark:n.Q1.transparent,hcLight:n.Q1.transparent},t.kg("inputOption.activeBackground","Background hover color of options in input fields.")),s=(0,i.x1)("inputOption.activeForeground",{dark:n.Q1.white,light:n.Q1.black,hcDark:d.CU,hcLight:d.CU},t.kg("inputOption.activeForeground","Foreground color of activated options in input fields.")),f=((0,i.x1)("input.placeholderForeground",{light:(0,i.JO)(d.CU,.5),dark:(0,i.JO)(d.CU,.5),hcDark:(0,i.JO)(d.CU,.7),hcLight:(0,i.JO)(d.CU,.7)},t.kg("inputPlaceholderForeground","Input box foreground color for placeholder text.")),(0,i.x1)("inputValidation.infoBackground",{dark:"#063B49",light:"#D6ECF2",hcDark:n.Q1.black,hcLight:n.Q1.white},t.kg("inputValidationInfoBackground","Input validation background color for information severity."))),b=(0,i.x1)("inputValidation.infoForeground",{dark:null,light:null,hcDark:null,hcLight:d.CU},t.kg("inputValidationInfoForeground","Input validation foreground color for information severity.")),p=(0,i.x1)("inputValidation.infoBorder",{dark:"#007acc",light:"#007acc",hcDark:d.b1,hcLight:d.b1},t.kg("inputValidationInfoBorder","Input validation border color for information severity.")),x=(0,i.x1)("inputValidation.warningBackground",{dark:"#352A05",light:"#F6F5D2",hcDark:n.Q1.black,hcLight:n.Q1.white},t.kg("inputValidationWarningBackground","Input validation background color for warning severity.")),B=(0,i.x1)("inputValidation.warningForeground",{dark:null,light:null,hcDark:null,hcLight:d.CU},t.kg("inputValidationWarningForeground","Input validation foreground color for warning severity.")),F=(0,i.x1)("inputValidation.warningBorder",{dark:"#B89500",light:"#B89500",hcDark:d.b1,hcLight:d.b1},t.kg("inputValidationWarningBorder","Input validation border color for warning severity.")),m=(0,i.x1)("inputValidation.errorBackground",{dark:"#5A1D1D",light:"#F2DEDE",hcDark:n.Q1.black,hcLight:n.Q1.white},t.kg("inputValidationErrorBackground","Input validation background color for error severity.")),v=(0,i.x1)("inputValidation.errorForeground",{dark:null,light:null,hcDark:null,hcLight:d.CU},t.kg("inputValidationErrorForeground","Input validation foreground color for error severity.")),C=(0,i.x1)("inputValidation.errorBorder",{dark:"#BE1100",light:"#BE1100",hcDark:d.b1,hcLight:d.b1},t.kg("inputValidationErrorBorder","Input validation border color for error severity.")),w=(0,i.x1)("dropdown.background",{dark:"#3C3C3C",light:n.Q1.white,hcDark:n.Q1.black,hcLight:n.Q1.white},t.kg("dropdownBackground","Dropdown background.")),D=(0,i.x1)("dropdown.listBackground",{dark:null,light:null,hcDark:n.Q1.black,hcLight:n.Q1.white},t.kg("dropdownListBackground","Dropdown list background.")),L=(0,i.x1)("dropdown.foreground",{dark:"#F0F0F0",light:d.CU,hcDark:n.Q1.white,hcLight:d.CU},t.kg("dropdownForeground","Dropdown foreground.")),y=(0,i.x1)("dropdown.border",{dark:w,light:"#CECECE",hcDark:d.b1,hcLight:d.b1},t.kg("dropdownBorder","Dropdown border.")),H=(0,i.x1)("button.foreground",n.Q1.white,t.kg("buttonForeground","Button foreground color.")),Q=(0,i.x1)("button.separator",(0,i.JO)(H,.4),t.kg("buttonSeparator","Button separator color.")),O=(0,i.x1)("button.background",{dark:"#0E639C",light:"#007ACC",hcDark:null,hcLight:"#0F4A85"},t.kg("buttonBackground","Button background color.")),I=(0,i.x1)("button.hoverBackground",{dark:(0,i.a)(O,.2),light:(0,i.e$)(O,.2),hcDark:O,hcLight:O},t.kg("buttonHoverBackground","Button background color when hovering.")),A=(0,i.x1)("button.border",d.b1,t.kg("buttonBorder","Button border color.")),E=(0,i.x1)("button.secondaryForeground",{dark:n.Q1.white,light:n.Q1.white,hcDark:n.Q1.white,hcLight:d.CU},t.kg("buttonSecondaryForeground","Secondary button foreground color.")),T=(0,i.x1)("button.secondaryBackground",{dark:"#3A3D41",light:"#5F6A79",hcDark:null,hcLight:n.Q1.white},t.kg("buttonSecondaryBackground","Secondary button background color.")),S=(0,i.x1)("button.secondaryHoverBackground",{dark:(0,i.a)(T,.2),light:(0,i.e$)(T,.2),hcDark:null,hcLight:null},t.kg("buttonSecondaryHoverBackground","Secondary button background color when hovering.")),U=(0,i.x1)("radio.activeForeground",s,t.kg("radioActiveForeground","Foreground color of active radio option.")),J=(0,i.x1)("radio.activeBackground",k,t.kg("radioBackground","Background color of active radio option.")),q=(0,i.x1)("radio.activeBorder",h,t.kg("radioActiveBorder","Border color of the active radio option.")),R=(0,i.x1)("radio.inactiveForeground",null,t.kg("radioInactiveForeground","Foreground color of inactive radio option.")),W=(0,i.x1)("radio.inactiveBackground",null,t.kg("radioInactiveBackground","Background color of inactive radio option.")),M=(0,i.x1)("radio.inactiveBorder",{light:(0,i.JO)(U,.2),dark:(0,i.JO)(U,.2),hcDark:(0,i.JO)(U,.4),hcLight:(0,i.JO)(U,.2)},t.kg("radioInactiveBorder","Border color of the inactive radio option.")),$=(0,i.x1)("radio.inactiveHoverBackground",u,t.kg("radioHoverBackground","Background color of inactive active radio option when hovering.")),V=(0,i.x1)("checkbox.background",w,t.kg("checkbox.background","Background color of checkbox widget.")),G=((0,i.x1)("checkbox.selectBackground",a.Cg,t.kg("checkbox.select.background","Background color of checkbox widget when the element it's in is selected.")),(0,i.x1)("checkbox.foreground",L,t.kg("checkbox.foreground","Foreground color of checkbox widget."))),P=(0,i.x1)("checkbox.border",y,t.kg("checkbox.border","Border color of checkbox widget.")),_=((0,i.x1)("checkbox.selectBorder",d.t4,t.kg("checkbox.select.border","Border color of checkbox widget when the element it's in is selected.")),(0,i.x1)("keybindingLabel.background",{dark:new n.Q1(new n.bU(128,128,128,.17)),light:new n.Q1(new n.bU(221,221,221,.4)),hcDark:n.Q1.transparent,hcLight:n.Q1.transparent},t.kg("keybindingLabelBackground","Keybinding label background color. The keybinding label is used to represent a keyboard shortcut."))),j=(0,i.x1)("keybindingLabel.foreground",{dark:n.Q1.fromHex("#CCCCCC"),light:n.Q1.fromHex("#555555"),hcDark:n.Q1.white,hcLight:d.CU},t.kg("keybindingLabelForeground","Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.")),z=(0,i.x1)("keybindingLabel.border",{dark:new n.Q1(new n.bU(51,51,51,.6)),light:new n.Q1(new n.bU(204,204,204,.4)),hcDark:new n.Q1(new n.bU(111,195,223)),hcLight:d.b1},t.kg("keybindingLabelBorder","Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.")),N=(0,i.x1)("keybindingLabel.bottomBorder",{dark:new n.Q1(new n.bU(68,68,68,.6)),light:new n.Q1(new n.bU(187,187,187,.4)),hcDark:new n.Q1(new n.bU(111,195,223)),hcLight:d.CU},t.kg("keybindingLabelBottomBorder","Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut."))}}]);